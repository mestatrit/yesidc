/**
 * $Id: XFireClientFactory.java,v 1.1 2007/09/28 09:21:37 abel Exp $
 */

package com.yesibc.core.components.xfire;

import java.net.MalformedURLException;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.codehaus.xfire.client.XFireProxyFactory;
import org.codehaus.xfire.service.Service;
import org.codehaus.xfire.service.binding.ObjectServiceFactory;
import org.springframework.util.Assert;

/**
 * XFire Client Factory class.
 * <p/>
 * <p>
 * The class packages the proxy class that is generated by XFire WSGEN according to service url.  
 * Using generic type reduces to cast types.</p>
 *
 * @author Abel.Ye o_olle_e@hotmail.com create time: 2007-9-13 下午03:41:07
 */
@SuppressWarnings("unchecked")
public class XFireClientFactory {
	private static XFireProxyFactory serviceFactory = new XFireProxyFactory();

	private static final Log log = LogFactory.getLog(XFireClientFactory.class);

	private XFireClientFactory() {
	}

	/**
	 * Get the client proxy class like POJO.
	 *
	 * @param serviceURL   Web ServiceURL
	 * @param serviceClass Web Service interface
	 * @return Proxy class base on Web Service interface
	 */
	public static <T> T getClient(String serviceURL, Class<T> serviceClass) {
		Assert.notNull(serviceURL);
		Assert.notNull(serviceClass);
		Service serviceModel = new ObjectServiceFactory().create(serviceClass);
		try {
			return (T) serviceFactory.create(serviceModel, serviceURL);
		} catch (MalformedURLException e) {
			log.error(e.getMessage(), e);
			return null;
		}
	}

}
